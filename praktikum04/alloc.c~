#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "alloc.h"

char *strtok_malloc(char * str, const char * delimiters) {
	char *ret_ptr;
	char *tok_ptr;
	
	if (!delimiters)
		return NULL;
	
	tok_ptr = strtok(str, delimiters);
	
	/* Kein weiteres Token */
	if (!tok_ptr) {
		return NULL;
	}

	ret_ptr = (char*)malloc(strlen(tok_ptr) * sizeof(char));
	
	if (ret_ptr) {
		/* Alles gut */
		strcpy(ret_ptr, tok_ptr);
		return ret_ptr;
	}
	else {
		/* Kein Speicher bekommen */
		printf("strtok_malloc(): Malloc fehlgeschlagen\n");
		return (char *)-1;
	}
	
}

char *getenv_malloc (const char *name) {
	char *tmp_ptr;
	char *ret_ptr;
	
	if (!name)
		return NULL;
	
	tmp_ptr = getenv(name);
	
	if (!tmp_ptr) {
		ret_ptr = (char*)malloc(sizeof(char));
		if (!ret_ptr) {
			printf("getenv_malloc(): Malloc fehlgeschlagen\n");
			return NULL;
		}
		ret_ptr[0] = '\0';
		return ret_ptr;
	}
		
	ret_ptr = (char*)malloc(strlen(tmp_ptr) * sizeof(char));
	
	if (ret_ptr) {
		strcpy(ret_ptr, tmp_ptr);
		return ret_ptr;
	}
	else {
		/* Kein Speicher bekommen */
		printf("getenv_malloc(): Malloc fehlgeschlagen\n");
		return NULL;
	}
}

char *strcpy_malloc (const char * source) {
	char *ret_ptr;
	
	if (!source)
		return NULL;
		
	ret_ptr = (char*)malloc(strlen(source) * sizeof(char));
	
	strcpy(ret_ptr, source);
	
	return ret_ptr;
}

char *malloc_string(const int length) {
	return (char*)malloc(length * sizeof(char));
}
